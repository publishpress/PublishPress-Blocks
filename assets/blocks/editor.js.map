{"version":3,"file":"editor.js","mappings":"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","sources":["webpack://advanced-gutenberg/./assets/js/editor.jsx"],"sourcesContent":["if (typeof wp !== 'undefined' && typeof wp.domReady !== 'undefined'){\r\n    wp.domReady(()=>{\r\n        let block_acess_restricted = false;\r\n        let user_block_features = false;\r\n\r\n        if(advgb_blocks_vars.blocks.active_blocks === 'undefined' || advgb_blocks_vars.blocks.active_blocks.length === 0) {\r\n            // No Block Access defined for this role\r\n            block_acess_restricted = true;\r\n        }\r\n\r\n        if(advgb_blocks_vars.user_block_features !== 'undefined' && advgb_blocks_vars.user_block_features) {\r\n            // No Block Access defined for this role\r\n            user_block_features = advgb_blocks_vars.user_block_features;\r\n        }\r\n\r\n        let gutenberg_init_function = null;\r\n        if (typeof window._wpLoadBlockEditor !== 'undefined') {\r\n            gutenberg_init_function = window._wpLoadBlockEditor;\r\n        }\r\n\r\n        if (gutenberg_init_function !== null) {\r\n            // Wait for Gutenberg editor to be ready\r\n            gutenberg_init_function.then(() => {\r\n\r\n                if (user_block_features) {\r\n                    let custom_style = document.createElement('style');\r\n                    let custom_css = '';\r\n                    // Handle block adding restriction\r\n                    if (typeof user_block_features.disable_block_adding !== 'undefined' && user_block_features.disable_block_adding) {\r\n                        setTimeout( function() {\r\n                            // Remove the block inserter completely\r\n                            wp.data.dispatch('core/editor').setIsInserterOpened(false);\r\n                            wp.data.dispatch('core/editor').removeEditorPanel('inserter');\r\n                            // Remove the ability to insert blocks\r\n                            wp.data.dispatch('core/editor').updateEditorSettings({\r\n                                hasInserter: false,\r\n                                allowedBlockTypes: false,\r\n                            });\r\n                        }, 3000 );\r\n                        // no need to process custom block permission since we removed all before\r\n                        block_acess_restricted = false;\r\n\r\n\r\n                        // Add CSS to hide all block insertion UI elements incase any still remain\r\n                        custom_css += `\r\n                            .editor-document-tools__left button.components-toolbar-button editor-document-tools__inserter-toggle,\r\n                            .editor-document-tools__left button[aria-label=\"Block Inserter\"],\r\n                            .edit-post-header-toolbar__inserter-toggle,\r\n                            .block-editor-inserter,\r\n                            .block-editor-block-list__insertion-point-inserter,\r\n                            .block-editor-default-block-appender {\r\n                                display: none !important;\r\n                            }\r\n                        `;\r\n                    }\r\n\r\n                    // Handle pattern directory restriction\r\n                    if (typeof user_block_features.disable_pattern_directory !== 'undefined' && user_block_features.disable_pattern_directory) {\r\n                        custom_css += `\r\n                            .editor-inserter-sidebar button[id*=\"-patterns-view\"],\r\n                            .editor-inserter-sidebar button[aria-controls*=\"-patterns-view\"],\r\n                            .block-editor-inserter__block-patterns-tabs-container,\r\n                            .block-editor-tabbed-sidebar__tabpanel[id*=\"-patterns-view\"],\r\n                            .block-editor-tabbed-sidebar__tab[id*=\"-patterns-view\"],\r\n                            .block-editor-block-patterns-list,\r\n                            .block-editor-tabbed-sidebar__tabpanel[aria-labelledby*=\"-patterns\"],\r\n                            .block-editor-tabbed-sidebar__tab[aria-labelledby*=\"-patterns\"] {\r\n                                display: none !important;\r\n                            }\r\n                        `;\r\n                    }\r\n\r\n                    // Handle Openverse restriction\r\n                    if (typeof user_block_features.disable_openverse !== 'undefined' && user_block_features.disable_openverse) {\r\n                        custom_css += `\r\n                            .block-editor-inserter__media-tabs-container button[id*=\"-openverse\"],\r\n                            .block-editor-inserter__media-tabs-container button[aria-controls*=\"-openverse-view\"] {\r\n                                display: none !important;\r\n                            }\r\n                        `;\r\n                    }\r\n\r\n                    if ( custom_css ) {\r\n                        custom_style.innerHTML = custom_css;\r\n                        document.head.appendChild( custom_style );\r\n                    }\r\n\r\n                }\r\n\r\n                if (advgb_blocks_vars.original_settings.allowedBlockTypes !== true) {\r\n                    // allowed_block_types filter has been used, in this case we do nothing as we don't know why blocks have been filtered\r\n                    block_acess_restricted = false;\r\n                }\r\n\r\n                let list_blocks = [];\r\n                let granted_blocks = [];\r\n                let missing_block = false;\r\n                // Retrieve all registered blocks\r\n                let blocks = wp.blocks.getBlockTypes();\r\n                const savedBlocks = {\r\n                    active_blocks: Object.values(advgb_blocks_vars.blocks.active_blocks),\r\n                    inactive_blocks: Object.values(advgb_blocks_vars.blocks.inactive_blocks),\r\n                };\r\n\r\n                for (let block in blocks) {\r\n                    var blockItemIcon = '';\r\n                    var blockItem = {\r\n                        name: blocks[block].name,\r\n                        icon: blocks[block].icon.src,\r\n                        title: blocks[block].title,\r\n                        category: blocks[block].category,\r\n                        parent: blocks[block].parent\r\n                    };\r\n\r\n                    var savedIcon = !!blocks[block].icon.src ? blocks[block].icon.src : blocks[block].icon;\r\n\r\n                    if (blocks[block].icon.foreground !== undefined) blockItem.iconColor = blocks[block].icon.foreground;\r\n\r\n                    if (typeof savedIcon === 'function') {\r\n                        if(typeof savedIcon.prototype !== 'undefined') {\r\n                            blockItem.icon = wp.element.renderToString(wp.element.createElement(savedIcon));\r\n                            blockItem.icon = blockItem.icon.replace(/stopcolor/g, 'stop-color');\r\n                            blockItem.icon = blockItem.icon.replace(/stopopacity/g, 'stop-opacity');\r\n                        } else {\r\n                            blockItemIcon = wp.element.createElement(wp.components.Dashicon, {icon: 'block-default'});\r\n                            blockItem.icon = wp.element.renderToString(blockItemIcon);\r\n                        }\r\n                    } else if (typeof savedIcon === 'object') {\r\n                        blockItem.icon = wp.element.renderToString(savedIcon);\r\n                        blockItem.icon = blockItem.icon.replace(/stopcolor/g, 'stop-color');\r\n                        blockItem.icon = blockItem.icon.replace(/stopopacity/g, 'stop-opacity');\r\n                    } else if (typeof savedIcon === 'string') {\r\n                        blockItemIcon = wp.element.createElement(wp.components.Dashicon, {icon: savedIcon});\r\n                        blockItem.icon = wp.element.renderToString(blockItemIcon);\r\n                    }\r\n                    list_blocks.push(blockItem);\r\n\r\n\r\n                    // Compare current block with the list of blocks we have\r\n                    if (savedBlocks.active_blocks.indexOf(blocks[block].name) >= 0) {\r\n                        // Block is active\r\n                        granted_blocks.push(blocks[block].name);\r\n                    } else if (savedBlocks.inactive_blocks.indexOf(blocks[block].name) >= 0) {\r\n                        // Block is inactive\r\n                    } else {\r\n                        // This block is not in our database yet, but by default we allow the usage\r\n                        granted_blocks.push(blocks[block].name);\r\n                        missing_block = true;\r\n                    }\r\n                }\r\n\r\n                if (missing_block) {\r\n                    if (console !== undefined && console.error !== undefined) {\r\n                        // Let's output as log instead of error\r\n                        console.log('Reloading editor by PublishPress Blocks plugin');\r\n                    }\r\n\r\n                    if (block_acess_restricted) {\r\n                        /* It seems the best approach to update editor settings, however is overriden\r\n                        * https://github.com/WordPress/gutenberg/issues/15993#issuecomment-1487007071\r\n                        * We're adding 3 seconds delay to bypass the override */\r\n                        setTimeout( function() {\r\n                            wp.data.dispatch('core/editor').updateEditorSettings({\r\n                                allowedBlockTypes: granted_blocks\r\n                            });\r\n                        }, 3000 );\r\n                    }\r\n\r\n                    var list_categories = wp.blocks.getCategories();\r\n\r\n                    try {\r\n                        // Use this ajax query to update the block list in db\r\n                        jQuery.ajax({\r\n                            url: advgb_blocks_vars.ajaxurl,\r\n                            method: 'POST',\r\n                            data: {\r\n                                action: 'advgb_update_blocks_list',\r\n                                blocksList: JSON.stringify(list_blocks),\r\n                                categoriesList: JSON.stringify(list_categories),\r\n                                nonce: advgb_blocks_vars.nonce\r\n                            },\r\n                            success: function (data) {\r\n                                //console.log(data);\r\n                            }\r\n                        });\r\n                    } catch (e) {\r\n                        //console.log(e);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n}\r\n"],"names":["wp","domReady","block_acess_restricted","user_block_features","advgb_blocks_vars","blocks","active_blocks","length","gutenberg_init_function","window","_wpLoadBlockEditor","then","custom_style","document","createElement","custom_css","disable_block_adding","setTimeout","data","dispatch","setIsInserterOpened","removeEditorPanel","updateEditorSettings","hasInserter","allowedBlockTypes","disable_pattern_directory","disable_openverse","innerHTML","head","appendChild","original_settings","list_blocks","granted_blocks","missing_block","getBlockTypes","savedBlocks","Object","values","inactive_blocks","block","blockItemIcon","blockItem","name","icon","src","title","category","parent","savedIcon","undefined","foreground","iconColor","prototype","element","renderToString","replace","components","Dashicon","_typeof","push","indexOf","console","error","log","list_categories","getCategories","jQuery","ajax","url","ajaxurl","method","action","blocksList","JSON","stringify","categoriesList","nonce","success","e"],"sourceRoot":""}