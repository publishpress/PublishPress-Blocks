{"version":3,"file":"post-sidebar.js","mappings":"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","sources":["webpack://advanced-gutenberg/./assets/blocks/editor-sidebar/post-sidebar.jsx"],"sourcesContent":["(function ( wpI18n, wpPlugins, wpElement, wpData, wpComponents ) {\r\n    const { __ } = wpI18n;\r\n    const { registerPlugin } = wpPlugins;\r\n    const { Component, Fragment } = wpElement;\r\n    const { select, withSelect, withDispatch } = wpData;\r\n    const { PanelBody, ButtonGroup, Button } = wpComponents;\r\n    const { compose } = wp.compose;\r\n    const PluginSidebar = wp.editor.PluginSidebar || wp.editPost.PluginSidebar;\r\n    const PluginSidebarMoreMenuItem = wp.editor.PluginSidebarMoreMenuItem || wp.editPost.PluginSidebarMoreMenuItem;\r\n\r\n    const sidebarName  = \"advgb-editor-sidebar\";\r\n    const sidebarTitle = __( 'PublishPress Blocks Settings', 'advanced-gutenberg' );\r\n    const sidebarIcon  = \"layout\";\r\n    const VISUAL_GUIDE_SETTINGS = [\r\n        { label: __( 'Inherit from global settings', 'advanced-gutenberg' ), value: '' },\r\n        { label: __( 'Enable', 'advanced-gutenberg' ), value: 'enable' },\r\n        { label: __( 'Disable', 'advanced-gutenberg' ), value: 'disable' },\r\n    ];\r\n    const EDITOR_WIDTH_SETTINGS = [\r\n        { label: __( 'Inherit from global settings', 'advanced-gutenberg' ), value: '' },\r\n        { label: __( 'Original', 'advanced-gutenberg' ), value: 'default' },\r\n        { label: __( 'Large', 'advanced-gutenberg' ), value: 'large' },\r\n        { label: __( 'Full width', 'advanced-gutenberg' ), value: 'full' },\r\n    ];\r\n\r\n    const updateBodyClass = function () {\r\n        const postMetaData = select( 'core/editor' ).getEditedPostAttribute( 'meta' );\r\n        if (!postMetaData) return null;\r\n        const { advgb_blocks_editor_width, advgb_blocks_columns_visual_guide } = postMetaData;\r\n        const bodyClass = window.document.body.classList;\r\n\r\n        bodyClass.remove(\r\n            'advgb-editor-width-default',\r\n            'advgb-editor-width-large',\r\n            'advgb-editor-width-full',\r\n            'advgb-editor-col-guide-enable',\r\n            'advgb-editor-col-guide-disable',\r\n        );\r\n\r\n        // Editor width\r\n        if (!!advgb_blocks_editor_width) {\r\n            bodyClass.add( 'advgb-editor-width-' + advgb_blocks_editor_width );\r\n        } else {\r\n            // Global\r\n            bodyClass.add( 'advgb-editor-width-' + advg_settings.editor_width_global );\r\n        }\r\n\r\n        // Columns visual guide\r\n        if (!!advgb_blocks_columns_visual_guide) {\r\n            bodyClass.add( 'advgb-editor-col-guide-' + advgb_blocks_columns_visual_guide );\r\n        } else {\r\n            // Global\r\n            bodyClass.add( 'advgb-editor-col-guide-' + advg_settings.enable_columns_visual_guide_global );\r\n        }\r\n    };\r\n\r\n    // Line below stopped working - https://github.com/WordPress/gutenberg/issues/28032#issuecomment-759723289\r\n    // window.document.addEventListener(\"DOMContentLoaded\", updateBodyClass);\r\n\r\n    class AdvSidebar extends Component {\r\n        constructor() {\r\n            super( ...arguments );\r\n        }\r\n\r\n        onUpdateMeta( metaData ) {\r\n            const { metaValues, updateMetaField } = this.props;\r\n            const meta = { ...metaValues, ...metaData };\r\n\r\n            updateMetaField( meta );\r\n            updateBodyClass();\r\n        }\r\n\r\n        render() {\r\n            const { columnsVisualGuide, editorWidth } = this.props;\r\n\r\n            return (\r\n                <Fragment>\r\n                    <div className=\"advgb-editor-sidebar-note\">\r\n                        { __( 'These settings will override the PublishPress Blocks global settings.', 'advanced-gutenberg' ) }\r\n                    </div>\r\n                    <PanelBody title={ __( 'Editor width', 'advanced-gutenberg' ) }>\r\n                        <div className=\"advgb-editor-sidebar-note\">\r\n                            { __( 'Change your editor width', 'advanced-gutenberg' ) }\r\n                        </div>\r\n                        <ButtonGroup className=\"advgb-button-group\">\r\n                            {EDITOR_WIDTH_SETTINGS.map((setting, index) => (\r\n                                <Button className=\"advgb-button\"\r\n                                        key={ index }\r\n                                        isSecondary={ setting.value !== editorWidth }\r\n                                        isPrimary={ setting.value === editorWidth }\r\n                                        onClick={ () => this.onUpdateMeta( { advgb_blocks_editor_width: setting.value } ) }\r\n                                >\r\n                                    { setting.label }\r\n                                </Button>\r\n                            ) ) }\r\n                        </ButtonGroup>\r\n                    </PanelBody>\r\n                    { advgbBlocks.enable_advgb_blocks !== undefined && advgbBlocks.enable_advgb_blocks === '1' &&\r\n                        <PanelBody title={ __( 'Columns Visual Guide', 'advanced-gutenberg' ) } initialOpen={ false }>\r\n                            <div className=\"advgb-editor-sidebar-note\">\r\n                                { __( 'Border to materialize PublishPress Blocks Column block', 'advanced-gutenberg' ) }\r\n                            </div>\r\n                            <ButtonGroup className=\"advgb-button-group\">\r\n                                {VISUAL_GUIDE_SETTINGS.map((setting, index) => (\r\n                                    <Button className=\"advgb-button\"\r\n                                            key={ index }\r\n                                            isSecondary={ setting.value !== columnsVisualGuide }\r\n                                            isPrimary={ setting.value === columnsVisualGuide }\r\n                                            onClick={ () => this.onUpdateMeta( { advgb_blocks_columns_visual_guide: setting.value } ) }\r\n                                    >\r\n                                        { setting.label }\r\n                                    </Button>\r\n                                ) ) }\r\n                            </ButtonGroup>\r\n                        </PanelBody>\r\n                    }\r\n                </Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    const AdvSidebarRender = compose(\r\n        withDispatch( ( dispatch ) => {\r\n            return {\r\n                updateMetaField: ( data ) => {\r\n                    dispatch( 'core/editor' ).editPost(\r\n                        { meta: data }\r\n                    );\r\n                },\r\n            }\r\n        } ),\r\n        withSelect( ( select ) => {\r\n            const metaValues = select( 'core/editor' ).getEditedPostAttribute( 'meta' );\r\n\r\n            return {\r\n                metaValues: metaValues,\r\n                columnsVisualGuide: metaValues.advgb_blocks_columns_visual_guide,\r\n                editorWidth: metaValues.advgb_blocks_editor_width,\r\n            }\r\n        } )\r\n    )( AdvSidebar );\r\n\r\n    registerPlugin( 'advgb-editor-sidebar', {\r\n        render: function () {\r\n            return (\r\n                <Fragment>\r\n                    <PluginSidebarMoreMenuItem\r\n                        target={ sidebarName }\r\n                        icon={ sidebarIcon }\r\n                    >\r\n                        { sidebarTitle }\r\n                    </PluginSidebarMoreMenuItem>\r\n                    <PluginSidebar\r\n                        name={ sidebarName }\r\n                        title={ sidebarTitle }\r\n                        icon={ sidebarIcon }\r\n                    >\r\n                        <div className=\"advgb-editor-sidebar-content\">\r\n                            <AdvSidebarRender />\r\n                        </div>\r\n                    </PluginSidebar>\r\n                </Fragment>\r\n            )\r\n        }\r\n    } );\r\n})( wp.i18n, wp.plugins, wp.element, wp.data, wp.components );\r\n"],"names":["wpI18n","wpPlugins","wpElement","wpData","wpComponents","__","registerPlugin","Component","Fragment","select","withSelect","withDispatch","PanelBody","ButtonGroup","Button","compose","PluginSidebar","PluginSidebarMoreMenuItem","sidebarName","sidebarTitle","sidebarIcon","VISUAL_GUIDE_SETTINGS","EDITOR_WIDTH_SETTINGS","AdvSidebar","AdvSidebarRender","wp","i18n","plugins","element","data","components","editor","editPost","label","value","_Component","_classCallCheck","_callSuper","arguments","_inherits","key","metaData","_this$props","this","props","metaValues","updateMetaField","_objectSpread","postMetaData","getEditedPostAttribute","advgb_blocks_editor_width","advgb_blocks_columns_visual_guide","bodyClass","window","document","body","classList","remove","add","advg_settings","editor_width_global","enable_columns_visual_guide_global","updateBodyClass","_this","_this$props2","columnsVisualGuide","editorWidth","React","createElement","className","title","map","setting","index","isSecondary","isPrimary","onClick","onUpdateMeta","undefined","advgbBlocks","enable_advgb_blocks","initialOpen","dispatch","meta","render","target","icon","name"],"sourceRoot":""}